{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
            },
            "maxLength": 61
        },
        "webNodeVMSku": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "allowedValues": [
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_DS1",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2"
            ],
            "metadata": {
                "description": "Size of the Web Node VMs."
            }
        },
        "computeNodeVMSku": {
            "type": "string",
            "defaultValue": "Standard_D4_v2",
            "allowedValues": [
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_DS1",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2"
            ],
            "metadata": {
                "description": "Size of the Compute Node VMs."
            }
        },
        "webNodeInstanceCount": {
            "type": "int",
            "metadata": {
                "description": "Number of VM instances for WebNodes (100 or less)."
            },
            "defaultValue": 2,
            "maxValue": 100
        },
        "computeNodeInstanceCount": {
            "type": "int",
            "metadata": {
                "description": "Number of VM instances for ComputeNodes (100 or less)."
            },
            "defaultValue": 2,
            "maxValue": 100
        },
        "poolInitialSize": {
            "type": "int",
            "metadata": {
                "description": "Pool size at startup of ComputeNode."
            },
            "defaultValue": 5,
            "maxValue": 1000
        },
        "poolMaxSize": {
            "type": "int",
            "metadata": {
                "description": "Max pool size per ComputeNode. Must be larger than poolInitialSize."
            },
            "defaultValue": 500,
            "maxValue": 1000
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password on all VMs. Must be 8-16 characters long and contain at least 1 uppercase character(s), 1+ lowercase character(s), 1+ number(s), and 1+ special character(s)"
            }
        }
    },
    "variables": {
        "namingInfix": "[toLower(substring(concat(parameters('dnsPrefix'), uniqueString(resourceGroup().id)), 0, 9))]",
        "storageAccountType": "Standard_LRS",
        "newStorageAccountSuffix": "[concat(variables('namingInfix'), 'sa')]",
        "uniqueStringArray": [
            "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '0')))]",
            "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '1')))]",
            "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '2')))]",
            "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '3')))]",
            "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '4')))]"
        ],
        "saCount": "[length(variables('uniqueStringArray'))]",
        "sqlserverName": "[concat('mrsdb', uniqueString(resourceGroup().id))]",
        "databaseName": "mrsdb",
        "vnetName": "vnet",
        "feSubnetName": "WebNodeSubnet",
        "beSubnetName": "ComputeNodeSubnet",
        "networkSecurityGroupName": "[concat(parameters('dnsPrefix'), 'NSG')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "feSubnetRef": "[concat(variables('vnetID'),'/subnets/', variables('feSubnetName'))]",
        "beSubnetRef": "[concat(variables('vnetID'),'/subnets/', variables('beSubnetName'))]",
        "publicIPAddressName": "PublicIP",
        "webNodeLoadBalancerName": "webNodeLoadBalancer",
        "webNodeLoadBalancerFrontEndName": "webNodeLoadBalancerFrontEnd",
        "webNodeLoadBalancerBackEndName": "webNodeLoadBalancerBackEnd",
        "webNodeLoadBalancerNatPoolName": "webNodeLoadBalancerNatPool",
        "appGwPublicIPAddressName": "AppGatewayIP",
        "appGwName": "AppGateway",
        "appGwPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIPAddressName'))]",
        "appGwID": "[resourceId('Microsoft.Network/applicationGateways',variables('appGwName'))]",
        "appGwSubnetName": "[concat(variables('namingInfix'),'appGwSubnet')]",
        "appGwSubnetPrefix": "10.0.2.0/24",
        "appGwSubnetID": "[concat(variables('vnetID'),'/subnets/', variables('appGwSubnetName'))]",
        "appGwBackendPort": 80,
        "appGwBePoolName": "AppGatewayBePool",
        "scriptsUri": "[uri(deployment().properties.templateLink.uri, '.')]"
    },
    "resources": [{
            "apiVersion": "[providers('Microsoft.Network','networkSecurityGroups').apiVersions[0]]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [{
                        "name": "RDP",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Webnode",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat('sa', variables('uniqueStringArray')[copyIndex()])]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[providers('Microsoft.Storage','storageAccounts').apiVersions[0]]",
            "copy": {
                "name": "storageLoop",
                "count": "[variables('saCount')]"
            },
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "name": "[variables('sqlserverName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "SqlServer"
            },
            "apiVersion": "2014-04-01",
            "properties": {
                "administratorLogin": "[parameters('adminUsername')]",
                "administratorLoginPassword": "[parameters('adminPassword')]",
                "version": "12.0"
            },
            "resources": [{
                    "name": "[variables('databaseName')]",
                    "type": "databases",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "displayName": "Database"
                    },
                    "apiVersion": "2015-01-01",
                    "dependsOn": [
                        "[variables('sqlserverName')]"
                    ],
                    "properties": {
                        "edition": "Basic",
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": "1073741824",
                        "requestedServiceObjectiveName": "Basic"
                    }
                },
                {
                    "type": "firewallRules",
                    "apiVersion": "2014-04-01",
                    "dependsOn": [
                        "[variables('sqlserverName')]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "WebNodes",
            "location": "[resourceGroup().location]",
            "apiVersion": "[providers('Microsoft.Compute','virtualMachineScaleSets').apiVersions[0]]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('webNodeLoadBalancerName'))]"
            ],
            "sku": {
                "name": "[parameters('webNodeVMSku')]",
                "capacity": "[parameters('webNodeInstanceCount')]"
            },
            "properties": {
                "overprovision": "false",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "managedDisk": { "storageAccountType": "Premium_LRS" },
                            "createOption": "FromImage"
                        },
                        "imageReference": {
                            "publisher": "MicrosoftRServer",
                            "offer": "MLServer-WS2016",
                            "sku": "Enterprise",
                            "version": "latest"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "WebNode",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [{
                            "name": "nic",
                            "properties": {
                                "primary": true,
                                "enableAcceleratedNetworking": true,
                                "ipConfigurations": [{
                                    "name": "ipconfig",
                                    "properties": {
                                        "subnet": {
                                            "id": "[variables('feSubnetRef')]"
                                        },
                                        "loadBalancerBackendAddressPools": [{
                                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('webNodeLoadBalancerName'), '/backendAddressPools/', variables('webNodeLoadBalancerBackEndName'))]"
                                        }],
                                        "loadBalancerInboundNatPools": [{
                                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('webNodeLoadBalancerName'), '/inboundNatPools/', variables('webNodeLoadBalancerNatPoolName'), 'RDP')]"
                                        }],
                                        "ApplicationGatewayBackendAddressPools": [{
                                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationGateways/', variables('appGwName'), '/backendAddressPools/', variables('appGwBePoolName'))]"
                                        }]
                                    }
                                }]
                            }
                        }]
                    },
                    "extensionProfile": {
                        "extensions": [{
                            "name": "customScript",
                            "properties": {
                                "publisher": "Microsoft.Compute",
                                "settings": {
                                    "fileUris": [
                                        "[concat(variables('scriptsUri'), 'ConfigureWebNode.ps1')]",
                                        "[concat(variables('scriptsUri'), 'RunConfigureWebNode.ps1')]"
                                    ]
                                },
                                "typeHandlerVersion": "1.8",
                                "autoUpgradeMinorVersion": true,
                                "protectedSettings": {
                                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ./RunConfigureWebNode.ps1 -script \"ConfigureWebNode.ps1\" -username \"', parameters('adminUserName'), '\" -password \"', parameters('adminPassword'), '\" -sqlServerConnectionString \"', concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'), ';User Id=', parameters('adminUsername'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('adminPassword'), ';'), '\"')]"
                                },
                                "type": "CustomScriptExtension"
                            }
                        }]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "apiVersion": "[providers('Microsoft.Insights','autoscaleSettings').apiVersions[0]]",
            "name": "autoscalewn",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Compute/virtualMachineScaleSets/WebNodes"
            ],
            "properties": {
                "name": "autoscalewn",
                "targetResourceUri": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/WebNodes')]",
                "enabled": true,
                "profiles": [{
                    "name": "Profile1",
                    "capacity": {
                        "minimum": "[parameters('webNodeInstanceCount')]",
                        "maximum": "100",
                        "default": "[parameters('webNodeInstanceCount')]"
                    },
                    "rules": [{
                            "metricTrigger": {
                                "metricName": "Percentage CPU",
                                "metricNamespace": "",
                                "metricResourceUri": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/WebNodes')]",
                                "timeGrain": "PT1M",
                                "statistic": "Average",
                                "timeWindow": "PT5M",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "threshold": 50.0
                            },
                            "scaleAction": {
                                "direction": "Increase",
                                "type": "ChangeCount",
                                "value": "1",
                                "cooldown": "PT5M"
                            }
                        },
                        {
                            "metricTrigger": {
                                "metricName": "Percentage CPU",
                                "metricNamespace": "",
                                "metricResourceUri": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/WebNodes')]",
                                "timeGrain": "PT1M",
                                "statistic": "Average",
                                "timeWindow": "PT30M",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "threshold": 30.0
                            },
                            "scaleAction": {
                                "direction": "Decrease",
                                "type": "ChangeCount",
                                "value": "1",
                                "cooldown": "PT30M"
                            }
                        }
                    ]
                }]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "ComputeNodes",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-03-30",
            "dependsOn": [
                "storageLoop",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('webNodeLoadBalancerName'))]"
            ],
            "sku": {
                "name": "[parameters('computeNodeVMSku')]",
                "capacity": "[parameters('computeNodeInstanceCount')]"
            },
            "properties": {
                "overprovision": "false",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "vhdContainers": [
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/sa', variables('uniqueStringArray')[0]), '2015-06-15').primaryEndpoints.blob, 'vhds')]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/sa', variables('uniqueStringArray')[1]), '2015-06-15').primaryEndpoints.blob, 'vhds')]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/sa', variables('uniqueStringArray')[2]), '2015-06-15').primaryEndpoints.blob, 'vhds')]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/sa', variables('uniqueStringArray')[3]), '2015-06-15').primaryEndpoints.blob, 'vhds')]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/sa', variables('uniqueStringArray')[4]), '2015-06-15').primaryEndpoints.blob, 'vhds')]"
                            ],
                            "name": "osdisk",
                            "createOption": "FromImage"
                        },
                        "imageReference": {
                            "publisher": "MicrosoftRServer",
                            "offer": "MLServer-WS2016",
                            "sku": "Enterprise",
                            "version": "latest"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "CmptNode",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [{
                            "name": "nic",
                            "properties": {
                                "primary": true,
                                "enableAcceleratedNetworking": true,
                                "ipConfigurations": [{
                                    "name": "ipconfig",
                                    "properties": {
                                        "subnet": {
                                            "id": "[variables('beSubnetRef')]"
                                        }
                                    }
                                }]
                            }
                        }]
                    },
                    "extensionProfile": {
                        "extensions": [{
                            "name": "customScript",
                            "properties": {
                                "publisher": "Microsoft.Compute",
                                "settings": {
                                    "fileUris": [
                                        "[concat(variables('scriptsUri'), 'ConfigureComputeNode.ps1')]",
                                        "[concat(variables('scriptsUri'), 'RunConfigureComputeNode.ps1')]"
                                    ]
                                },
                                "typeHandlerVersion": "1.8",
                                "autoUpgradeMinorVersion": true,
                                "protectedSettings": {
                                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ./RunConfigureComputeNode.ps1 -script \"ConfigureComputeNode.ps1\" -username \"', parameters('adminUserName'), '\" -password \"', parameters('adminPassword'), '\" -poolInitialSize \"', parameters('poolInitialSize'), '\" -poolMaxSize \"', parameters('poolMaxSize'), '\"')]"
                                },
                                "type": "CustomScriptExtension"
                            }
                        }]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "apiVersion": "[providers('Microsoft.Insights','autoscaleSettings').apiVersions[0]]",
            "name": "autoscalecn",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Compute/virtualMachineScaleSets/ComputeNodes"
            ],
            "properties": {
                "name": "autoscalecn",
                "targetResourceUri": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/ComputeNodes')]",
                "enabled": true,
                "profiles": [{
                    "name": "Profile1",
                    "capacity": {
                        "minimum": "[parameters('computeNodeInstanceCount')]",
                        "maximum": "100",
                        "default": "[parameters('computeNodeInstanceCount')]"
                    },
                    "rules": [{
                            "metricTrigger": {
                                "metricName": "Percentage CPU",
                                "metricNamespace": "",
                                "metricResourceUri": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/ComputeNodes')]",
                                "timeGrain": "PT1M",
                                "statistic": "Average",
                                "timeWindow": "PT5M",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "threshold": 50.0
                            },
                            "scaleAction": {
                                "direction": "Increase",
                                "type": "ChangeCount",
                                "value": "1",
                                "cooldown": "PT5M"
                            }
                        },
                        {
                            "metricTrigger": {
                                "metricName": "Percentage CPU",
                                "metricNamespace": "",
                                "metricResourceUri": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/ComputeNodes')]",
                                "timeGrain": "PT1M",
                                "statistic": "Average",
                                "timeWindow": "PT60M",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "threshold": 30.0
                            },
                            "scaleAction": {
                                "direction": "Decrease",
                                "type": "ChangeCount",
                                "value": "1",
                                "cooldown": "PT60M"
                            }
                        }
                    ]
                }]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ],
            "apiVersion": "[providers('Microsoft.Network','virtualNetworks').apiVersions[0]]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [{
                        "name": "[variables('feSubnetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('beSubnetName')]",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('appGwSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('appGwSubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[providers('Microsoft.Network','publicIPAddresses').apiVersions[0]]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 30,
                "dnsSettings": {
                    "domainNameLabel": "[toLower(parameters('dnsPrefix'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('webNodeLoadBalancerName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[providers('Microsoft.Network','loadBalancers').apiVersions[0]]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [{
                    "name": "[variables('webNodeLoadBalancerFrontEndName')]",
                    "properties": {
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                        }
                    }
                }],
                "backendAddressPools": [{
                    "name": "[variables('webNodeLoadBalancerBackendName')]"
                }],
                "loadBalancingRules": [{
                    "name": "HTTP",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('webNodeLoadBalancerName')), '/frontendIPConfigurations/', variables('webNodeLoadBalancerFrontEndName'))]"
                        },
                        "backendAddressPool": {
                            "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('webNodeLoadBalancerName')), '/backendAddressPools/', variables('webNodeLoadBalancerBackendName'))]"
                        },
                        "probe": {
                            "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('webNodeLoadBalancerName')), '/probes/lbprobe')]"
                        },
                        "protocol": "Tcp",
                        "frontendPort": 80,
                        "backendPort": 80,
                        "enableFloatingIP": false,
                        "idleTimeoutInMinutes": 5
                    }
                }],
                "probes": [{
                    "properties": {
                        "protocol": "Tcp",
                        "port": 80,
                        "intervalInSeconds": 10,
                        "numberOfProbes": 2
                    },
                    "name": "lbprobe"
                }],
                "inboundNatPools": [{
                    "name": "[concat(variables('webNodeLoadBalancerNatPoolName'), 'RDP')]",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('webNodeLoadBalancerName')), '/frontendIPConfigurations/', variables('webNodeLoadBalancerFrontEndName'))]"
                        },
                        "protocol": "tcp",
                        "frontendPortRangeStart": 50000,
                        "frontendPortRangeEnd": 50099,
                        "backendPort": 3389
                    }
                }]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('appGwPublicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[providers('Microsoft.Network','publicIPAddresses').apiVersions[0]]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "name": "[variables('appGwName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[providers('Microsoft.Network','applicationGateways').apiVersions[0]]",
            "dependsOn": [
                "[variables('vnetID')]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('appGwPublicIPAddressName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Standard_Medium",
                    "tier": "Standard",
                    "capacity": "3"
                },
                "gatewayIPConfigurations": [{
                    "name": "appGwIpConfig",
                    "properties": {
                        "subnet": {
                            "id": "[variables('appGwSubnetID')]"
                        }
                    }
                }],
                "frontendIPConfigurations": [{
                    "name": "appGwFrontendIP",
                    "properties": {
                        "PublicIPAddress": {
                            "id": "[variables('appGwPublicIPAddressID')]"
                        }
                    }
                }],
                "frontendPorts": [{
                        "name": "appGwFrontendHttpPort",
                        "properties": {
                            "Port": "80"
                        }
                    },
                    {
                        "name": "appGwFrontendHttpsPort",
                        "properties": {
                            "Port": "443"
                        }
                    }
                ],
                "backendAddressPools": [{
                    "name": "[variables('appGwBePoolName')]"
                }],
                "backendHttpSettingsCollection": [{
                    "name": "appGwBackendHttpSettings",
                    "properties": {
                        "Port": "[variables('appGwBackendPort')]",
                        "Protocol": "Http",
                        "CookieBasedAffinity": "Disabled",
                        "RequestTimeout": 3600,
                        "probe": {
                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGwName')), '/probes/probe1')]"
                        }
                    }
                }],
                "probes": [{
                    "name": "probe1",
                    "properties": {
                        "protocol": "http",
                        "host": "127.0.0.1",
                        "path": "/ping",
                        "interval": 30,
                        "timeout": 30,
                        "unhealthyThreshold": 5
                    }
                }],
                "httpListeners": [{
                    "name": "HTTP",
                    "properties": {
                        "FrontendIPConfiguration": {
                            "Id": "[concat(variables('appGwID'), '/frontendIPConfigurations/appGwFrontendIP')]"
                        },
                        "FrontendPort": {
                            "Id": "[concat(variables('appGwID'), '/frontendPorts/appGwFrontendHttpPort')]"
                        },
                        "Protocol": "Http",
                        "SslCertificate": null
                    }
                }],
                "requestRoutingRules": [{
                    "Name": "rule1",
                    "properties": {
                        "RuleType": "Basic",
                        "httpListener": {
                            "id": "[concat(variables('appGwID'), '/httpListeners/HTTP')]"
                        },
                        "backendAddressPool": {
                            "id": "[concat(variables('appGwID'), '/backendAddressPools/', variables('appGwBePoolName'))]"
                        },
                        "backendHttpSettings": {
                            "id": "[concat(variables('appGwID'), '/backendHttpSettingsCollection/appGwBackendHttpSettings')]"
                        }
                    }
                }]
            }
        }
    ]
}